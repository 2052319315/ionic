@import "./item";
@import "./item.md.vars";

// Material Design Item
// --------------------------------------------------

:host {
  font-family: $item-md-font-family;
  font-size: $item-md-font-size;
  font-weight: normal;
  text-transform: none;

  --ion-color-base: #{$item-md-background-color};
  --ion-color-contrast: #{$item-md-text-color};
  --ion-color-tint: #{$item-md-background-color-active};
  --ion-color-shade: #{$item-md-border-bottom-color};

  --padding-start: #{$item-md-padding-start};
  --padding-inner-end: #{$item-md-padding-end / 2};

  --transition: background-color 300ms cubic-bezier(.4, 0, .2, 1);

  --border-width: 0;
  --border-inner-width: 0;
  --border-color: #{$item-md-border-bottom-style};
  --border-style: #{$item-md-border-bottom-style};

  --padding-start: #{$item-md-padding-start};
}

:host(.activated) {
  background-color: var(--background-active);
}

// Material Design Item Lines
// --------------------------------------------------

// Default input items have a border
:host(.item-interactive) {
  --border-width: #{0 0 $item-md-border-bottom-width 0};
}

// Full lines - apply the border to the item
// Inset lines - apply the border to the item inner
:host(.item-lines-full) {
  --border-width: #{0 0 $item-md-border-bottom-width 0};
}

:host(.item-lines-inset) {
  --border-inner-width: #{0 0 $item-md-border-bottom-width 0};
}

// Full lines - remove the border from the item inner (inset list items)
// Inset lines - remove the border on the item (full list items)
// No lines - remove the border on both (full / inset list items)
:host(.item-lines-inset),
:host(.item-lines-none) {
  --border-width: 0;
}

:host(.item-lines-full),
:host(.item-lines-none){
  --border-inner-width: 0;
}

// Material Design Item Detail Push
// --------------------------------------------------

.item-detail-icon {
  font-size: 20px;

  color: var(--detail-push-color);
}


// Material Design Item Slots
// --------------------------------------------------

::slotted(:not(.interactive)[slot="start"]),
::slotted(:not(.interactive)[slot="end"]) {
  @include margin($item-md-slot-margin-top, $item-md-slot-margin-end, $item-md-slot-margin-bottom, $item-md-slot-margin-start);
}

::slotted(ion-icon[slot="start"]),
::slotted(ion-icon[slot="end"]) {
  @include margin($item-md-icon-slot-margin-top, $item-md-icon-slot-margin-end, $item-md-icon-slot-margin-bottom, $item-md-icon-slot-margin-start);
}

// TODO
::slotted(ion-icon[slot="start"]) + .item-inner,
::slotted(ion-icon[slot="start"]) + .item-interactive {
  @include margin-horizontal($item-md-padding-start + ($item-md-padding-start / 2), null);
}

::slotted(ion-avatar[slot="start"]),
::slotted(ion-thumbnail[slot="start"]) {
  @include margin(($item-md-padding-end / 2), $item-md-padding-end, ($item-md-padding-end / 2), 0);
}

::slotted(ion-avatar[slot="end"]),
::slotted(ion-thumbnail[slot="end"]) {
  @include margin(($item-md-padding-end / 2));
}

:host(.item-label-stacked) ::slotted([slot="end"]),
:host(.item-label-floating) ::slotted([slot="end"]) {
  @include margin($item-md-label-slot-end-margin-top, $item-md-label-slot-end-margin-end, $item-md-label-slot-end-margin-bottom, $item-md-label-slot-end-margin-start);
}


// Material Design Item Button
// --------------------------------------------------

::slotted(.button-small-md) {
  font-size: 12px;

  --padding-top: 0;
  --padding-bottom: 0;
  --padding-start: .6em;
  --padding-end: .6em;

  --height: 25px;
}


// TODO, review
::slotted(.button-small-md) ion-icon[slot="icon-only"] {
  @include padding(0);
}

// Material Design Item Avatar
// --------------------------------------------------

::slotted(ion-avatar) {
  width: $item-md-avatar-width;
  height: $item-md-avatar-height;
}


// Material Design Item Thumbnail
// --------------------------------------------------

::slotted(ion-thumbnail) {
  width: $item-md-thumbnail-width;
  height: $item-md-thumbnail-height;
}

:host(.item-toggle) ::slotted(ion-label) {
  @include margin-horizontal(0, null);
}



// // FROM RADIO

// .item-radio.item-md ion-label {
//   @include margin-horizontal(0, null);
// }


// // Material Design Radio Item Label: Checked
// // -----------------------------------------

// .item-radio-checked.item-md ion-label {
//   color: $radio-md-color-on;
// }




// // FROM INPUT
// // Material Design Highlighted Input
// // --------------------------------------------------

// // Input highlight mixin for focus, valid, and invalid states
// @mixin md-input-highlight($highlight-color) {
//   border-bottom-color: $highlight-color;
//   box-shadow: inset 0 -1px 0 0 $highlight-color;
// }

// // Show the focus highlight when the input has focus
// @if ($input-md-show-focus-highlight) {
//   // In order to get a 2px border we need to add an inset
//   // box-shadow 1px (this is to avoid the div resizing)

//   .item-md.item-input.item-input-has-focus .item-inner {
//     @include md-input-highlight($input-md-highlight-color);
//   }

//   // The last item in a list has a border on the item, not the
//   // inner item, so add it to the item itself
//   .list-md .item-input.item-input-has-focus:last-child {
//     @include md-input-highlight($input-md-highlight-color);

//     .item-inner {
//       box-shadow: none;
//     }
//   }
// }

// // TODO this is angular specific scss

// // Show the valid highlight when it has the .ng-valid class and a value
// @if ($input-md-show-valid-highlight) {
//   .item-md.item-input.ng-valid.item-input-has-value:not(.item-input-has-focus) .item-inner {
//     @include md-input-highlight($input-md-highlight-color-valid);
//   }

//   .list-md .item-input.ng-valid.item-input-has-value:not(.item-input-has-focus):last-child {
//     @include md-input-highlight($input-md-highlight-color-valid);

//     .item-inner {
//       box-shadow: none;
//     }
//   }
// }

// // Show the invalid highlight when it has the invalid class and has been touched
// @if ($input-md-show-invalid-highlight) {
//   .item-md.item-input.ng-invalid.ng-touched:not(.item-input-has-focus) .item-inner {
//     @include md-input-highlight($input-md-highlight-color-invalid);
//   }

//   .list-md .item-input.ng-invalid.ng-touched:not(.item-input-has-focus):last-child {
//     @include md-input-highlight($input-md-highlight-color-invalid);

//     .item-inner {
//       box-shadow: none;
//     }
//   }
// }



// // FROM TEXTAREA
// // Material Design Stacked & Floating Textarea
// // --------------------------------------------------

// .item-label-stacked .native-textarea-md,
// .item-label-floating .native-textarea-md {
//   @include margin(8px, null, 8px, 0);

//   width: calc(100% - #{$textarea-md-margin-end});
// }
