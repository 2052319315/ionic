@import "./button.vars";

// Button
// --------------------------------------------------

.button-container {
  @include font-smoothing();
  @include text-align(center);
  @include appearance(none);

  position: relative;
  z-index: 0;
  display: inline-block;

  border: 0;

  line-height: 1;

  text-decoration: none;
  text-overflow: ellipsis;
  text-transform: none;

  white-space: nowrap;
  cursor: pointer;

  vertical-align: top; // the better option for most scenarios
  vertical-align: -webkit-baseline-middle; // the best for those that support it

  transition: background-color, opacity 100ms linear;

  font-kerning: none;
  user-select: none;

  contain: content;
}

.button-container {
  @include border-radius($button-border-radius);
  @include margin($button-margin-top, $button-margin-end, $button-margin-bottom, $button-margin-start);
  @include padding($button-padding-top, $button-padding-end, $button-padding-bottom, $button-padding-start);

  overflow: hidden;

  height: $button-height;

  border-width: $button-border-width;
  border-style: $button-border-style;
  border-color: $button-border-color;

  font-family: $button-font-family;
  font-size: $button-font-size;
  font-weight: $button-font-weight;
  letter-spacing: $button-letter-spacing;
  text-transform: $button-text-transform;
  color: $button-text-color;
  background-color: $button-background;
  box-shadow: $button-box-shadow;
  opacity: $button-opacity;
  transition: $button-transition;
}

.button-container:hover {
  opacity: $button-opacity-hover;
}

.button-container[disabled] {
  cursor: default;
  opacity: $button-opacity-disabled;

  pointer-events: none;
}

.button-container:active,
.button-container:focus {
  outline: none;
}

.button-inner {
  display: flex;

  flex-flow: row nowrap;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;

  width: 100%;
  height: 100%;
}


// Block Button
// --------------------------------------------------

:host(.button-block) > .button-container {
  @include margin-horizontal(0);

  display: block;
  clear: both;

  width: 100%;

  contain: strict;
}

:host(.button-block::after) {
  clear: both;
}


// Full Button
// --------------------------------------------------

:host(.button-full) > .button-container {
  display: block;

  width: 100%;

  contain: strict;
}


// Material Design Clear Button
// --------------------------------------------------

:host(.button-full.button-outline) {
  --border-radius: 0;

  > .button-container {
    border-right-width: 0;
    border-left-width: 0;
  }
}


// iOS Full Button
// --------------------------------------------------

:host(.button-full) {
  @include margin-horizontal(0);
  @include border-radius(0);

  border-right-width: 0;
  border-left-width: 0;
}


// Button Icons
// --------------------------------------------------

ion-icon {
  font-size: 1.4em;

  pointer-events: none;
}

ion-icon[slot="start"] {
  @include margin(0, .3em, 0, -.3em);
}

ion-icon[slot="end"] {
  @include margin(0, -.2em, 0, .3em);
}

ion-icon[slot="icon-only"] {
  font-size: 1.8em;
}


// Button Ripple effect
// --------------------------------------------------

ion-ripple-effect {
  --color: $button-ripple-color;
}
